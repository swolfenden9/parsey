{"$message_type":"diagnostic","message":"unused import: `ToTokens`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/ast.rs","byte_start":49,"byte_end":57,"line_start":2,"line_end":2,"column_start":20,"column_end":28,"is_primary":true,"text":[{"text":"use quote::{quote, ToTokens};","highlight_start":20,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/ast.rs","byte_start":47,"byte_end":57,"line_start":2,"line_end":2,"column_start":18,"column_end":28,"is_primary":true,"text":[{"text":"use quote::{quote, ToTokens};","highlight_start":18,"highlight_end":28}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/ast.rs","byte_start":41,"byte_end":42,"line_start":2,"line_end":2,"column_start":12,"column_end":13,"is_primary":true,"text":[{"text":"use quote::{quote, ToTokens};","highlight_start":12,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/ast.rs","byte_start":57,"byte_end":58,"line_start":2,"line_end":2,"column_start":28,"column_end":29,"is_primary":true,"text":[{"text":"use quote::{quote, ToTokens};","highlight_start":28,"highlight_end":29}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `ToTokens`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/ast.rs:2:20\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse quote::{quote, ToTokens};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `ItemEnum`, `Item`, `MetaList`, and `parse_macro_input`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/ast.rs","byte_start":70,"byte_end":87,"line_start":3,"line_end":3,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"use syn::{parse_macro_input, Attribute, DeriveInput, Ident, Item, ItemEnum, Meta, MetaList};","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/ast.rs","byte_start":120,"byte_end":124,"line_start":3,"line_end":3,"column_start":61,"column_end":65,"is_primary":true,"text":[{"text":"use syn::{parse_macro_input, Attribute, DeriveInput, Ident, Item, ItemEnum, Meta, MetaList};","highlight_start":61,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/ast.rs","byte_start":126,"byte_end":134,"line_start":3,"line_end":3,"column_start":67,"column_end":75,"is_primary":true,"text":[{"text":"use syn::{parse_macro_input, Attribute, DeriveInput, Ident, Item, ItemEnum, Meta, MetaList};","highlight_start":67,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/ast.rs","byte_start":142,"byte_end":150,"line_start":3,"line_end":3,"column_start":83,"column_end":91,"is_primary":true,"text":[{"text":"use syn::{parse_macro_input, Attribute, DeriveInput, Ident, Item, ItemEnum, Meta, MetaList};","highlight_start":83,"highlight_end":91}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/ast.rs","byte_start":70,"byte_end":89,"line_start":3,"line_end":3,"column_start":11,"column_end":30,"is_primary":true,"text":[{"text":"use syn::{parse_macro_input, Attribute, DeriveInput, Ident, Item, ItemEnum, Meta, MetaList};","highlight_start":11,"highlight_end":30}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/ast.rs","byte_start":118,"byte_end":134,"line_start":3,"line_end":3,"column_start":59,"column_end":75,"is_primary":true,"text":[{"text":"use syn::{parse_macro_input, Attribute, DeriveInput, Ident, Item, ItemEnum, Meta, MetaList};","highlight_start":59,"highlight_end":75}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/ast.rs","byte_start":140,"byte_end":150,"line_start":3,"line_end":3,"column_start":81,"column_end":91,"is_primary":true,"text":[{"text":"use syn::{parse_macro_input, Attribute, DeriveInput, Ident, Item, ItemEnum, Meta, MetaList};","highlight_start":81,"highlight_end":91}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `ItemEnum`, `Item`, `MetaList`, and `parse_macro_input`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/ast.rs:3:11\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse syn::{parse_macro_input, Attribute, DeriveInput, Ident, Item, ItemEnum, Meta, MetaList};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `name`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/ast.rs","byte_start":311,"byte_end":315,"line_start":8,"line_end":8,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let name = &item.ident;","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/ast.rs","byte_start":311,"byte_end":315,"line_start":8,"line_end":8,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let name = &item.ident;","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"_name","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `name`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/ast.rs:8:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let name = &item.ident;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_name`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `token_type`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/ast.rs","byte_start":527,"byte_end":537,"line_start":16,"line_end":16,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"    let (token_type, errror_type) = parse_ast_attribute(ast_attr); // Parse the attribute into metadata","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/ast.rs","byte_start":527,"byte_end":537,"line_start":16,"line_end":16,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"    let (token_type, errror_type) = parse_ast_attribute(ast_attr); // Parse the attribute into metadata","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":"_token_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `token_type`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/ast.rs:16:10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let (token_type, errror_type) = parse_ast_attribute(ast_attr); // Parse the attribute into metadata\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_token_type`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `errror_type`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/ast.rs","byte_start":539,"byte_end":550,"line_start":16,"line_end":16,"column_start":22,"column_end":33,"is_primary":true,"text":[{"text":"    let (token_type, errror_type) = parse_ast_attribute(ast_attr); // Parse the attribute into metadata","highlight_start":22,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/ast.rs","byte_start":539,"byte_end":550,"line_start":16,"line_end":16,"column_start":22,"column_end":33,"is_primary":true,"text":[{"text":"    let (token_type, errror_type) = parse_ast_attribute(ast_attr); // Parse the attribute into metadata","highlight_start":22,"highlight_end":33}],"label":null,"suggested_replacement":"_errror_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `errror_type`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/ast.rs:16:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let (token_type, errror_type) = parse_ast_attribute(ast_attr); // Parse the attribute into metadata\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_errror_type`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `token_type`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/ast.rs","byte_start":1073,"byte_end":1083,"line_start":32,"line_end":32,"column_start":17,"column_end":27,"is_primary":true,"text":[{"text":"            let token_type = list.tokens.clone().into_iter().nth(0).unwrap();","highlight_start":17,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/ast.rs","byte_start":1073,"byte_end":1083,"line_start":32,"line_end":32,"column_start":17,"column_end":27,"is_primary":true,"text":[{"text":"            let token_type = list.tokens.clone().into_iter().nth(0).unwrap();","highlight_start":17,"highlight_end":27}],"label":null,"suggested_replacement":"_token_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `token_type`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/ast.rs:32:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let token_type = list.tokens.clone().into_iter().nth(0).unwrap();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_token_type`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"called `.nth(0)` on a `std::iter::Iterator`, when `.next()` is equivalent","code":{"code":"clippy::iter_nth_zero","explanation":null},"level":"warning","spans":[{"file_name":"src/ast.rs","byte_start":1086,"byte_end":1124,"line_start":32,"line_end":32,"column_start":30,"column_end":68,"is_primary":true,"text":[{"text":"            let token_type = list.tokens.clone().into_iter().nth(0).unwrap();","highlight_start":30,"highlight_end":68}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#iter_nth_zero","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::iter_nth_zero)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try calling `.next()` instead of `.nth(0)`","code":null,"level":"help","spans":[{"file_name":"src/ast.rs","byte_start":1086,"byte_end":1124,"line_start":32,"line_end":32,"column_start":30,"column_end":68,"is_primary":true,"text":[{"text":"            let token_type = list.tokens.clone().into_iter().nth(0).unwrap();","highlight_start":30,"highlight_end":68}],"label":null,"suggested_replacement":"list.tokens.clone().into_iter().next()","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: called `.nth(0)` on a `std::iter::Iterator`, when `.next()` is equivalent\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/ast.rs:32:30\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let token_type = list.tokens.clone().into_iter().nth(0).unwrap();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try calling `.next()` instead of `.nth(0)`: `list.tokens.clone().into_iter().next()`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#iter_nth_zero\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::iter_nth_zero)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"7 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 7 warnings emitted\u001b[0m\n\n"}
